**_ Ajax ( Asynchronous Javascript and XML )로 데이터 통신하기 _**

- 비동기적으로 가지고오는 통신방법
- ES6의 fetch를 이용해서 리액트에서 데이터 처리하기
- Axios로 데이터 처리
- async, await 적용하기

- AJAX : 웹 페이지의 이동없이 필요한 데이터만 전송하는 기술임
  -- 웹 어플리케이션에서 데이터를 가져올 때 서버쪽 데이터가 필요할 때 ajax기법을 사용하게된다.
  -- 비동기 ( Asynchronous )는 요청이 끝날 때 까지 기다리는 것이 아니라, 동시에 여러 작업을 수행하게 된다.
  -- 나중에 react에서는 다른 서버의 REST API와 통신을 이용하여 데이터베이스 데이터를 가져올 수 있다.

**_ ES6의 fetch를 이용해서 리액트에서 데이터 처리하기 _**

<!-- 사용예시 -->

- Promise = fetch(요청주소)

1. 이벤트 클리시 처리하기
   1-1. 데이터를 가져와서 useState()에 저장하는 작업이다.
   1-2. 극단적으로 표현해 데이터 통신에 100초가 소요되면 useState는 100초간 undefined상태가 된다.
   1-3. 렌더링 시에 에러를 나타내기 때문에, undefined에 관한 처리를 동시에 진행한다.


**_ 화면 렌더링 완료시 데이터 처리 _**
<!-- 화면 렌더링 완료시 데이터 처리하기 : useEffect()훅 사용하기 ( 반드시 ) -->

- 비동기 작업을 컴포넌트에 바로 쓰고 state를 변경하면, 무한루프에 빠짐
- 그래서 useEffect()훅을 이용하여 첫 번째 렌더링 완료시만 데이터 가져오도록 처리해야됨
**_ 리액트 훅 _**

** 훅(Hook)정의 **

- 리액트 컴포넌트는 클래스형 컴포넌트와 함수형 컴포넌트로 나뉜다.
- 리액트 훅은 새로운 기능으로 React 16.8버전에서 새로 추가된 기능
- 함수형태의 컴포넌트에서 사용되는 몇가지 기술을 Hook이라고 부름 ( useState, userEffect등 )
- 리액트 훅은 함수형 컴포넌트가 "클래스형 컴포넌트의 기능을 사용할 수 있도록" 해주는 기능이다.

** 훅의 규칙 **

- 최상위 에서만 Hook을 호출해야한다
  -- 반복문, 조건문, 중첩된 함수 내에서 Hook을 실행하면 안된다.
  -- 이 규칙을 따르면 컴포넌트가 렌더링될 때마다 항상 동일한 순서로 Hook이 호출되는 것이 보장된다.

- 리액트 함수 컴포넌트에서만 Hook을 호출해야 한다.

** 반드시 알아야할 기본 훅 **

- useState(초기값)
  -- useState(): 배열반환 첫 번째 배열의 요서에는 현재 값을, 두 번째 요소는 상태를 변경하는 ( setter )

  -- 사용예시
  -- const [data, setData] = useState('초기값');

- userEffect ( 실행시킬 콜백함수, 값에 따른 렌더링 지정 - 배열 )
  -- userEffect의 첫 번째 매개변수는 실행시킬 콜백함수
  -- userEffect의 두 번째 매개변수는 배열을 사용하여 특정값이 update 될 때만 실행시켜 줄 수 있다.
  -- useEffect()는 컴포넌트의 라이프 사이클을 다룬다. 리액트 컴포넌트가 mount, mount이후 unmount때 마다 특정작업을 수행한다.
  -- 서버에서 데이터를 가져올 때 useEffect() 를 쓰지 않으면 무한로딩이 된다.

-- 사용예시
-- useEffect( () => {}, []);

-- 라이프 사이클 : 언제 만들어져서 언제 소멸되는가?

-- mount : 컴포넌트가 생성될 때
-- unmount : 컴포넌트가 사라질 때

** 라이프 사이클 ( 무조건 외워야됨 ) **

- mount : 컴포넌트 생성될 때 ( 생성될 때 단계 )
  -- 1. constructor (생성자) 호출 (mount됨)
  -- 2. render (화면에 보여줌)
  -- 3. React Dom 및 refs 업데이트 (render안에 구문을 실행시킴)
  -- 4. componentDidMount ( 특정함수를 실행한다. )

- 업데이트 할 때 단계
  -- 1. New Props 또는 setState() 또는 forceUpdate() 실행
  -- 2. render
  -- 3. React Dom 및 refs 업데이트
  -- 4. componentDidUpdate ( 특정함수를 실행 )

- 제거 할 때
  -- 1. componentWillUnmount ( 특정함수를 실행 )

** 함수형 훅 **
- state가 실행될 때마다 계속 체인지 되어서 서버에서 값을 가져올 때 무한로딩에 걸릴 수 있다.
-- useEffect( () => {
  console.log('렌더링완료')
  });

- mount 이후 업데이트 될 때는 실행되지 않으려면, 두 번째 매개변수 배열을 준다. ( 무조건 외우기!!!! )
  -- useEffect( () => {
  console.log('렌더링완료')
  }, []);
